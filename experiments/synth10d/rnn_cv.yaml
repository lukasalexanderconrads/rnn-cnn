name: synth10d/rnn_cv/
device: cuda:0
num_runs: 1
seed: 1

model:
  module: lab.models.simple
  name: RNN
  args:
    fc_dims: !!python/tuple []
    rnn_dim: 5
    head_dims: [!!python/tuple [5]]
    threshold: .9             # threshold above which recurrence is stopped
    max_rec: [2]               # maximum number of recurrences
    loss_type: final          # final, every, (first)
    skip_connections: false   # if skip connection is used in recurrent layer

loader:
  module: lab.data.dataloaders_crossval
  name: DataLoaderSyntheticHardCV
  args:
    batch_size: 100
    n_classes: 2
    n_splits: 10
    n_features: 10
    n_clusters_per_class: 5
    seed: 1

trainer:
  module: lab.trainer
  name: CrossValidationTrainer
  args:
    n_epochs: 1000
    bm_metric: loss
    early_stop_criterion: 200 # if no improvement over this many epochs, stop training
    log_dir: results
    save_dir: results

    #loss_scheduler: None # fraction of total training that a given loss type is active
      #first_step: .0    # loss is computed for the first step's output
      #every_step: .0    # loss is computed for every step's output
      # remaining time:   loss is computed for the final step's output

    #max_rec_scheduler: # step wise increase from min to max
      #step_length: 50 # how many epochs is one step
